name: CI

on:
  pull_request:
    branches: [main]
  push:
  workflow_dispatch:

env:
  DATABASE_URL: postgres://user:password@localhost:5432/db?schema=techstories
  NEXTAUTH_URL: http://localhost:3000
  POSTGRES_PASSWORD: password
  POSTGRES_USER: user
  POSTGRES_DB: db
  DD_API_KEY: ${{ secrets.DD_API_KEY }}
  DD_INSIDE_CI: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Setup Docker cache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('docker-compose.yml', '**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build Docker images first
      - name: Build Docker images
        run: |
          docker compose build --build-arg BUILDKIT_INLINE_CACHE=1
          docker compose convert > docker-compose.converted.yml

      - name: Start Services
        run: |
          docker compose up -d
          docker compose ps

      # Setup Node and npm cache
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Prepare Database
        run: npm run db-prep

      - name: Run All Tests
        run: npm run test:ci
        continue-on-error: true
        env:
          NODE_ENV: test
          NEXTAUTH_URL: ${{ env.NEXTAUTH_URL }}
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Stop Services
        run: docker compose down
        if: always()

      # Save cache after build
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mkdir -p /tmp/.buildx-cache-new
          docker builder prune -af
          docker compose convert | grep -v '#' > /tmp/.buildx-cache-new/compose.yml
        if: always()

      - name: Update Docker cache
        uses: actions/cache/save@v3
        with:
          path: /tmp/.buildx-cache-new
          key: ${{ runner.os }}-buildx-${{ hashFiles('docker-compose.yml', '**/Dockerfile') }}
