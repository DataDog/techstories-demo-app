name: CI

on:
  pull_request:
    branches: [main]
  push:
  workflow_dispatch:

env:
  DATABASE_URL: postgres://user:password@localhost:5432/db?schema=techstories
  NEXTAUTH_URL: http://localhost:3000
  POSTGRES_PASSWORD: password
  POSTGRES_USER: user
  POSTGRES_DB: db
  DD_API_KEY: ${{ secrets.DD_API_KEY }}
  DD_INSIDE_CI: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Cache Docker images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Start Services
        run: |
          DOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1 docker compose build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max
          docker compose up -d
      
      # Cache Node modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install Dependencies
        run: npm ci
        
      - name: Prepare Database
        run: npm run db-prep
        
      - name: Run All Tests
        id: run_tests
        run: npm run test:ci
        env:
          NODE_ENV: test
          NEXTAUTH_URL: ${{ env.NEXTAUTH_URL }}
          DATABASE_URL: ${{ env.DATABASE_URL }}
          
      - name: Stop Services
        if: always()
        run: docker compose down
        
      # Move cache to prevent cache corruption
      - name: Move cache
        if: always()
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache