name: CI

on:
  pull_request:
    branches: [main]
    # run on open, and on every push
    types: [opened, synchronize]
  push:
  workflow_dispatch:

permissions:
  contents: read
  actions: write # Required for cache operations

env:
  DATABASE_URL: postgres://user:password@localhost:5432/db?schema=techstories
  NEXTAUTH_URL: http://localhost:3000
  POSTGRES_PASSWORD: password
  POSTGRES_USER: user
  POSTGRES_DB: db
  DD_API_KEY: ${{ secrets.DD_API_KEY }}
  DD_APP_KEY: ${{ secrets.DD_APP_KEY }}
  DD_INSIDE_CI: true
  DD_HOSTNAME: ${{ github.workflow }}-${{ github.ref }}
  DD_ENV: CI

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Restore node_modules cache
        id: cache
        uses: actions/cache/restore@v4
        if: always()
        with:
          path: ${github.workspace}/node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            modules-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and cache quotes_api
        uses: docker/build-push-action@v5
        with:
          context: ./services/quotes_api
          push: false
          load: true
          tags: quotes_api:latest
          cache-from: type=gha,scope=quotes-api
          cache-to: type=gha,scope=quotes-api,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      # Pull pre-built images (this is fast)
      - name: Pull external images
        run: docker compose pull dd-agent db

      # Start all services
      - name: Start Services
        run: docker compose up -d --wait

      - name: Prepare Database
        run: npm run db-prep
      - name: Configure Datadog Test Optimization
        uses: datadog/test-visibility-github-action@v2
        with:
          languages: js
          api_key: ${{ env.DD_API_KEY }}
          site: datadoghq.com
      - name: Run All Tests
        id: run_tests
        run: npm run test:ci
        env:
          NODE_ENV: test
          NEXTAUTH_URL: ${{ env.NEXTAUTH_URL }}
          DATABASE_URL: ${{ env.DATABASE_URL }}
          NODE_OPTIONS: -r ${{env.DD_TRACE_PACKAGE}}
      - name: Stop Services
        if: always()
        run: docker compose down
      # - name: Debug package files
      #   run: |
      #     find . -name "package-lock.json" -type f
      #     find . -name "package.json" -type f
      #     pwd
      #     ls -la
      - name: Save node_modules cache
        uses: actions/cache/save@v3
        if: always()
        with:
          path: ${github.workspace}/node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
