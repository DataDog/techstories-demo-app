name: Run Tests

on:
  pull_request:
    branches:
      - main
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DD_ENV: github-actions
      DD_SERVICE: techstories
      DD_API_KEY: ${DD_API_KEY}
      DD_APP_KEY: ${DD_APP_KEY}
      DATADOG_API_KEY: ${DD_API_KEY}
      DD_INSIDE_CI: true
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      DATABASE_URL: postgresql://user:password@127.0.0.1:5432/db?schema=techstories
      NEXTAUTH_SECRET: secret
      NEXTAUTH_URL: http://localhost:3000
      NEXT_PUBLIC_QUOTES_API_URL: http://localhost:3001
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_PUBLIC_DD_SERVICE_NAME: techstories
      NEXT_PUBLIC_DD_ENV: development
      NEXT_PUBLIC_DD_VERSION: 1.0.0
      NEXT_PUBLIC_DD_SITE: datadoghq.com
      NEXT_PUBLIC_DD_CLIENT_TOKEN: ${DD_CLIENT_TOKEN}
      NEXT_PUBLIC_DD_RUM_APPLICATION_ID: ${DD_RUM_APPLICATION_ID}
    steps:
      - uses: actions/checkout@v4
      - name: Configure Datadog Test Optimization
        uses: datadog/test-visibility-github-action@v2
        with:
          languages: js
          api_key: ${{ env.DD_API_KEY }}
          site: datadoghq.com # Change if your site is not US1
      - name: Start Services
        run: docker compose up -d
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: npm install
      - name: Prepare Database
        run: npm run db-prep
      - name: Run Tests
        run: npm run test:ci
        env:
          DD_ENV: github-actions
          DD_SERVICE: techstories
          DD_API_KEY: ${DD_API_KEY}
          DD_APP_KEY: ${DD_APP_KEY}
          DATADOG_API_KEY: ${DD_API_KEY}
          DD_INSIDE_CI: true
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          DATABASE_URL: postgresql://user:password@127.0.0.1:5432/db?schema=techstories
          NEXTAUTH_SECRET: secret
          NEXTAUTH_URL: http://localhost:3000
          NEXT_PUBLIC_QUOTES_API_URL: http://localhost:3001
          NEXT_TELEMETRY_DISABLED: 1
          NODE_OPTIONS: "-r dd-trace/ci/init"
        continue-on-error: true
      - name: Print Test Results
        run: |
          echo "Test Results:"
          echo "============="
          cat coverage/lcov-report/index.html
      - name: Stop Services
        run: docker compose down
      - name: Print Test Summary
        run: |
          echo "Test Summary:"
          echo "============="
          echo "Total Tests: $(grep -c 'test(' coverage/lcov-report/index.html)"
          echo "Total Coverage: $(grep -oP 'Total coverage: \K[0-9.]+' coverage/lcov-report/index.html)"
          # print to GITHUB_STEP_SUMMARY
          echo "Test Summary: $(grep -oP 'Total coverage: \K[0-9.]+' coverage/lcov-report/index.html)" >> $GITHUB_STEP_SUMMARY
