AWSTemplateFormatVersion: '2010-09-09'
Description: 'TechStories Application Infrastructure'

Parameters:
  DatabaseUrl:
    Type: String
    Description: 'The connection string for the RDS database'
    NoEcho: true
  DeploymentBucket:
    Type: String
    Description: 'S3 bucket containing deployment artifacts'

Resources:
  PrismaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: prisma-layer
      Description: 'Layer containing Prisma and its dependencies'
      Content:
        S3Bucket: !Ref DeploymentBucket
        S3Key: prisma-layer.zip
      CompatibleRuntimes:
        - python3.9
      CompatibleArchitectures:
        - x86_64

  DbMigrationLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: PrismaCLIAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub 'arn:aws:s3:::${DeploymentBucket}/*'

  DbMigrationLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_function.handler
      Role: !GetAtt DbMigrationLambdaRole.Arn
      Runtime: python3.9
      Code:
        S3Bucket: !Ref DeploymentBucket
        S3Key: db-migration-lambda.zip
      Timeout: 300
      MemorySize: 512
      Layers:
        - !Ref PrismaLayer

  DbMigrationCustomResource:
    Type: Custom::DbMigration
    Properties:
      ServiceToken: !GetAtt DbMigrationLambda.Arn
      DatabaseUrl: !Ref DatabaseUrl

Outputs:
  DbMigrationStatus:
    Description: 'Status of the database migration'
    Value: !GetAtt DbMigrationCustomResource.Message 