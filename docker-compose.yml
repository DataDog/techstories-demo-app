services:
  datadog-agent:
    image: gcr.io/datadoghq/agent:7.53.0
    environment:
      - DD_API_KEY
      - DD_HOSTNAME=workload-protection-lab-vm
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_RUNTIME_SECURITY_CONFIG_ENABLED=true
      - DD_RUNTIME_SECURITY_CONFIG_NETWORK_ENABLED=true
      - DD_RUNTIME_SECURITY_CONFIG_REMOTE_CONFIGURATION_ENABLED=true
      - HOST_ROOT='/host/root'
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_CONTAINER_LABELS_AS_TAGS={"my.custom.label.team":"team"}
      - DD_CONTAINER_EXCLUDE="name:datadog-agent"
      - DD_TAGS=${DD_TAGS-env:workload-protection-course}
      - DD_CLOUD_PROVIDER_METADATA=[]
    pid: "host"
    ports:
      - "8126:8126/tcp"
      - "8125:8125/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /sys/kernel/debug:/sys/kernel/debug
      - /:/host/root:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/os-release:/etc/os-release
    cap_add:
      - SYS_ADMIN
      - SYS_RESOURCE
      - SYS_PTRACE
      - NET_ADMIN
      - NET_BROADCAST
      - NET_RAW
      - IPC_LOCK
      - CHOWN
    security_opt:
      - apparmor:unconfined
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: db
      DD_AGENT_HOST: datadog
      DD_SERVICE: database
      DD_ENV: ${DD_ENV-local-env}
      DD_VERSION: 13
      DD_LOGS_INJECTION: "true"
    volumes:
      - ./services/db/data:/var/lib/postgresql/data
      - ./services/db/dd_agent.sql:/docker-entrypoint-initdb.d/dd_agent.sql
    ports:
      - "127.0.0.1:5432:5432"
    labels:
      com.datadoghq.tags.env: "${DD_ENV}"
      com.datadoghq.tags.service: "database"
      com.datadoghq.tags.version: "13"
      my.custom.label.team: "database"
      com.datadoghq.ad.check_names: '["postgres", "postgres"]'
      com.datadoghq.ad.init_configs: "[{}, {}]"
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port":5432,"username":"datadog","password":"datadog"}]'
      com.datadoghq.ad.logs: '[{"source": "postgresql", "service": "postgres"}]'
  quotes_api:
    build: ./services/quotes_api
    command: npm run start
    restart: always
    ports:
      - "127.0.0.1:3001:3001"
    environment:
      - PORT=3001
      - DD_ENV=${DD_ENV}
      - DD_SERVICE=quotes-api
    volumes:
      - ./services/quotes_api/server.js:/app/server.js
    labels:
      com.datadoghq.ad.logs: '[{"source": "nodejs", "service": "quotes-api"}]'
      com.datadoghq.tags.env: "${DD_ENV}"
      com.datadoghq.tags.service: "quotes-api"
      com.datadoghq.tags.version: "1.0.0"
      my.custom.label.team: "api-team"

