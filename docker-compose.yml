services:
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: db
    volumes:
      - ./db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  quotes_api:
    build: ./services/quotes_api
    restart: always
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_ENV=asm-protection-course
      - DD_SERVICE=quotes-api
      - DD_APPSEC_ENABLED=true
    command: npm run start
    depends_on:
      - datadog-agent
  generate_posts_api:
    build: ./services/generate_post_api
    restart: always
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_ENV=asm-protection-course
      - DD_SERVICE=generate-posts-api
      - DD_APPSEC_ENABLED=true
    command: npm run start
    depends_on:
      - datadog-agent
  datadog-agent:
    image: gcr.io/datadoghq/agent:7.53.0
    environment:
      - DD_API_KEY
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
    ports:
      - "8126:8126/tcp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
