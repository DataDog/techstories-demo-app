version: "3.7"
services:
  datadog:
    image: gcr.io/datadoghq/agent:latest
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_CONTAINER_EXCLUDE="name:datadog-agent"
      - DD_HOSTNAME_TRUST_UTS_NAMESPACE=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_CONTAINER_LABELS_AS_TAGS={"my.custom.label.team":"team"}
      - DD_TAGS=${DD_TAGS-env:techstories}
      - DD_HOSTNAME=${DD_HOSTNAME-techstories-host}
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    pid: "host"
    ports:
      - "8126:8126/tcp"
      - "8125:8125/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    networks:
      - techstories-net
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: db
      DD_AGENT_HOST: datadog
      DD_SERVICE: database
      DD_ENV: ${DD_ENV-local-env}
      DD_VERSION: 13
      DD_LOGS_INJECTION: "true"
    volumes:
      - /var/lib/postgresql/data
      - ./services/db/dd_agent.sql:/docker-entrypoint-initdb.d/dd_agent.sql
    ports:
      - "5432:5432"
    labels:
      com.datadoghq.tags.env: "${DD_ENV}"
      com.datadoghq.tags.service: "database"
      com.datadoghq.tags.version: "13"
      my.custom.label.team: "database"
      com.datadoghq.ad.check_names: '["postgres", "postgres"]'
      com.datadoghq.ad.init_configs: "[{}, {}]"
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port":5432,"username":"datadog","password":"datadog"}]'
      com.datadoghq.ad.logs: '[{"source": "postgresql", "service": "postgres"}]'
    networks:
      - techstories-net
  quotes_api:
    build: ./services/quotes_api
    command: npm run start
    restart: always
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - DD_ENV=${DD_ENV}
      - DD_SERVICE=quotes-api
      - DD_LOGS_INJECTION=true
      - DD_TRACE_SAMPLE_RATE="1"
      - DD_PROFILING_ENABLED=true
      - DD_AGENT_HOST=datadog
    volumes:
      - ./services/quotes_api/server.js:/app/server.js
    labels:
      com.datadoghq.ad.logs: '[{"source": "nodejs", "service": "quotes-api"}]'
      com.datadoghq.tags.env: "${DD_ENV}"
      com.datadoghq.tags.service: "quotes-api"
      com.datadoghq.tags.version: "1.0.0"
      my.custom.label.team: "api-team"
    networks:
      - techstories-net

networks:
  techstories-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.44.0.0/16
